{"version":3,"sources":["logo.svg","Map.js","App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","accessToken","Map","mapContainer","useRef","map","useState","lng","setLng","lat","setLat","zoom","setZoom","useEffect","current","container","style","center","on","getCenter","toFixed","getZoom","className","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAAe,I,2CCKfA,IAASC,YAAc,gGAEvB,IAsFeC,EAtFH,WAER,IAAMC,EAAeC,iBAAO,MACtBC,EAAMD,iBAAO,MACnB,EAAsBE,oBAAU,oBAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAsBF,mBAAS,mBAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAsEA,OAnEAC,qBAAU,WAEN,IAAIR,EAAIS,QAAR,CAEAT,EAAIS,QAAU,IAAId,IAASE,IAAI,CAC/Ba,UAAWZ,EAAaW,QACxBE,MAAO,uDACPC,OAAQ,CAACV,EAAKE,GACdE,KAAMA,QA6CVE,qBAAU,WACDR,EAAIS,SAETT,EAAIS,QAAQI,GAAG,QAAQ,WACvBV,EAAOH,EAAIS,QAAQK,YAAYZ,IAAIa,QAAQ,IAC3CV,EAAOL,EAAIS,QAAQK,YAAYV,IAAIW,QAAQ,IAC3CR,EAAQP,EAAIS,QAAQO,UAAUD,QAAQ,UAStC,gCACI,sBAAKE,UAAU,UAAf,wBACgBf,EADhB,gBACkCE,EADlC,YACgDE,KAEhD,qBAAKY,IAAKpB,EAAcmB,UAAU,sBC5E/BE,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OCKSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e54794e2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport { Threebox } from 'threebox-plugin/dist/threebox'; \r\n \r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoicGljcGljMTk3OSIsImEiOiJjazkwNno0NTAwYThhM2duNDl0ZmxqN3F6In0.cde4v5Pi0WMLUyHrNd5P-g';\r\n\r\nconst Map = () => {\r\n\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng, setLng] = useState(-1.6215116363994757);\r\n    const [lat, setLat] = useState(49.63364757742455);\r\n    const [zoom, setZoom] = useState(18);\r\n\r\n    //init de la map\r\n    useEffect(() => {\r\n\r\n        if (map.current) return; // initialize map only once\r\n\r\n        map.current = new mapboxgl.Map({\r\n        container: mapContainer.current,\r\n        style: 'mapbox://styles/picpic1979/ckoe1ilwl1zbi19lknjci52kf',\r\n        center: [lng, lat],\r\n        zoom: zoom\r\n        });\r\n\r\n        var origin = [49.63364757742455, -1.6215116363994757];\r\n\t\tvar soldier;\r\n\r\n        // map.current.on('style.load', function () {\r\n\r\n\t\t// \tmap.current.addLayer({\r\n\t\t// \t\tid: 'custom_layer',\r\n\t\t// \t\ttype: 'custom',\r\n\t\t// \t\trenderingMode: '3d',\r\n\t\t// \t\tonAdd: function (map, mbxContext) {\r\n\r\n\t\t// \t\t\twindow.tb = new Threebox(\r\n\t\t// \t\t\t\tmap,\r\n\t\t// \t\t\t\tmbxContext,\r\n\t\t// \t\t\t\t{ defaultLights: true }\r\n\t\t// \t\t\t);\r\n\r\n\t\t// \t\t\tvar options = {\r\n\t\t// \t\t\t\tobj: './models/gare.glb',\r\n\t\t// \t\t\t\ttype: 'gltf',\r\n\t\t// \t\t\t\tscale: 1,\r\n\t\t// \t\t\t\tunits: 'meters',\r\n\t\t// \t\t\t\trotation: { x: 90, y: 0, z: 0 } //default rotation\r\n\t\t// \t\t\t}\r\n\r\n\t\t// \t\t\ttb.loadObj(options, function (model) {\r\n\t\t// \t\t\t\tsoldier = model.setCoords(origin);\r\n\t\t// \t\t\t\ttb.add(soldier);\r\n\t\t// \t\t\t})\r\n\r\n\t\t// \t\t},\r\n\t\t// \t\trender: function (gl, matrix) {\r\n\t\t// \t\t\ttb.update();\r\n\t\t// \t\t}\r\n\t\t// \t});\r\n\t\t// })\r\n\r\n\r\n\r\n    });\r\n\r\n    //update des coordonnÃ©es\r\n    useEffect(() => {\r\n        if (!map.current) return; // wait for map to initialize\r\n\r\n        map.current.on('move', () => {\r\n        setLng(map.current.getCenter().lng.toFixed(4));\r\n        setLat(map.current.getCenter().lat.toFixed(4));\r\n        setZoom(map.current.getZoom().toFixed(2));\r\n        });\r\n\r\n\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"sidebar\">\r\n                Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n            </div>\r\n            <div ref={mapContainer} className=\"map-container\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Map;","import logo from './logo.svg';\nimport './App.css';\nimport Map from './Map.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map></Map>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}